<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-2.5.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
           http://www.springframework.org/schema/tx 
           http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">

	<!-- @Autowired -->
	<context:annotation-config />

	<context:component-scan base-package="com.anyview.service.*" />
	<context:component-scan base-package="com.anyview.dao.*" />
	<context:component-scan base-package="com.anyview.utils.task.*" />
	

	<!-- 数据库配置文件信息 -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<value>/WEB-INF/database/anyview.properties</value>
		</property>
		<property name="ignoreUnresolvablePlaceholders" value="true" />
	</bean>

	<!-- 加载学习系统数据库配置 -->
	<!-- <bean id="dataSource" destroy-method="close" class="com.mchange.v2.c3p0.ComboPooledDataSource"> -->
	<!-- <property name="driverClass" value="${anyview.driverClassName}"/> -->
	<!-- <property name="jdbcUrl" value="${anyview.url}"/> -->
	<!-- <property name="user" value="${anyview.username}"/> -->
	<!-- <property name="password" value="${anyview.password}"/> -->
	<!-- <property name="acquireIncrement" value="${c3p0.acquireIncrement}"></property> -->
	<!-- <property name="initialPoolSize" value="${c3p0.initialPoolSize}"></property> -->
	<!-- <property name="maxIdleTime" value="${c3p0.maxIdleTime}"></property> -->
	<!-- <property name="maxPoolSize" value="${c3p0.maxPoolSize}"></property> -->
	<!-- <property name="minPoolSize" value="${c3p0.minPoolSize}"></property> -->
	<!-- <property name="checkoutTimeout" value="${c3p0.checkoutTimeout}"></property> -->
	<!-- </bean> -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${anyview.driverClassName}" />
		<property name="url" value="${anyview.url}" />
		<property name="username" value="${anyview.username}" />
		<property name="password" value="${anyview.password}" />
	</bean>



	<!-- Spring封装学习平台sessionFactory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<property name="annotatedClasses">
			<list>
				<value>com.anyview.entities.TeacherTable</value>
				<value>com.anyview.entities.ClassTable</value>
				<value>com.anyview.entities.ClassStudentTable</value>
				<value>com.anyview.entities.CollegeTeacherTable</value>
				<value>com.anyview.entities.CollegeTable</value>
				<value>com.anyview.entities.UniversityTable</value>
				<value>com.anyview.entities.StudentTable</value>
				<value>com.anyview.entities.ManagerTable</value>
				<value>com.anyview.entities.ClassCourseTable</value>
				<value>com.anyview.entities.SchemeTable</value>
				<value>com.anyview.entities.SchemeT</value>
				<value>com.anyview.entities.ExerciseTable</value>
				<value>com.anyview.entities.SemesterTable</value>
				<value>com.anyview.entities.CourseTable</value>
				<value>com.anyview.entities.AnyviewVersionTable</value>
				<value>com.anyview.entities.SchemeTable</value>
				<value>com.anyview.entities.ClassTeacherTable</value>
				<value>com.anyview.entities.ClassTeacherCourseTable</value>
				<value>com.anyview.entities.ClassCourseSchemeTable</value>
				<value>com.anyview.entities.ProblemChapTable</value>
				<value>com.anyview.entities.ProblemLibTable</value>
				<value>com.anyview.entities.ProblemLibTeacherTable</value>
				<value>com.anyview.entities.ProblemTable</value>
				<value>com.anyview.entities.SchemeCacheTable</value>
				<value>com.anyview.entities.SchemeContentTable</value>
				<value>com.anyview.entities.ProblemLibTeacherTable</value>
				<value>com.anyview.entities.SchemeTeacherTable</value>
				<value>com.anyview.entities.CollegeTeacherTable</value>
				<value>com.anyview.entities.ExamPlanTable</value>
				<value>com.anyview.entities.ScoreTable</value>
				<value>com.anyview.entities.GradeRules</value>
				<value>com.anyview.entities.UniversitySchemesTable</value>
				<value>com.anyview.entities.ChinaUniversityTable</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQL5InnoDBDialect
				</prop>
				<prop key="hibernate.hbm3ddl.auto">update</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
			</props>
		</property>
	</bean>

	<!-- 封装模板 -->
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>


	<!-- Dao的父类BaseDaoImpl -->
	<!-- <bean id="baseDao" class="com.anyview.dao.impl.BaseDaoImpl" > <property 
		name="sessionFactory"> <ref bean="sessionFactory"/> </property> <property 
		name="hibernateTemplate"> <ref bean="hibernateTemplate"/> </property> </bean> -->
	<!-- <bean id="baseManager" class="com.anyview.service.commons.impl.BaseManagerImpl"> 
		<property name="baseDao"> <ref bean="baseDao"/> </property> </bean> -->

	<!-- 事务管理 -->
	<bean id="txManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<aop:config>
		<aop:pointcut id="bussinessService"
			expression="(execution(public * com.anyview.service..*.*(..))) " />
		<aop:advisor pointcut-ref="bussinessService" advice-ref="txAdvice" />
	</aop:config>

	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<!-- 所有以'get'开头的方法是read-only的 -->
			<tx:method name="get*" read-only="true" />
			<!-- 其他方法使用默认的事务设置 -->
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>

	<!--初始化bean获取工具类 -->
	<bean id="springContext" class="com.anyview.utils.springcontext.SpringContext"></bean>

	<!-- 作业类 -->
	<bean id="examJob"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject">
			<bean class="com.anyview.utils.task.QuartzExamJob" />
		</property>
		<property name="targetMethod" value="startAutomaticExamTask" />
		<property name="concurrent" value="false" /><!-- 作业不并发调度 -->
	</bean>

	<!-- 配置作业调度方式 -->
	<bean id="cronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="examJob" />
		<property name="cronExpression" value="0 43 1 * * ?" />
	</bean>

	<!-- 配置调度工厂 -->
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="cronTrigger" />
			</list>
		</property>
	</bean>



</beans>